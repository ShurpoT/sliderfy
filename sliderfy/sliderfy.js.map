{"version":3,"file":"sliderfy.js","sources":["../src/Components/sliderfy/Sliderfy.tsx"],"sourcesContent":["import { useState, useCallback, useEffect, useRef, JSX } from \"react\";\r\n\r\nimport \"./sliderfy.css\";\r\n\r\nlet swipeStart: number = 0;\r\nlet isSwiping: boolean = false;\r\n\r\nconst throttle = <T extends (...args: any[]) => any>(func: T, ms: number): ((...args: Parameters<T>) => void) => {\r\n    let lastCall = 0;\r\n    return function (...args: Parameters<T>) {\r\n        const now = Date.now();\r\n        if (now - lastCall >= ms) {\r\n            lastCall = now;\r\n            return func(...args);\r\n        }\r\n    };\r\n};\r\n\r\ntype AutoplayOptions = {\r\n    delay: number;\r\n    reverseDirection?: boolean;\r\n};\r\n\r\ninterface ISliderfy {\r\n    sliderfyClassName?: string;\r\n    children: JSX.Element | JSX.Element[];\r\n\r\n    slidesPerView?: number;\r\n    slidesPerGroup?: number;\r\n    spaceBetween?: number;\r\n\r\n    transitionDuration?: number;\r\n\r\n    allowTouchMove?: boolean;\r\n\r\n    autoplay?: AutoplayOptions;\r\n\r\n    vertical?: boolean;\r\n    renderDot?: null | ((i: number, className: string) => JSX.Element);\r\n}\r\n\r\nconst Sliderfy = ({\r\n    sliderfyClassName = \"sliderfy\",\r\n    children,\r\n\r\n    slidesPerView = 1,\r\n    slidesPerGroup = 1,\r\n    spaceBetween = 0,\r\n\r\n    transitionDuration = 1000,\r\n\r\n    allowTouchMove = true,\r\n\r\n    autoplay = {\r\n        delay: 0,\r\n        reverseDirection: false,\r\n    },\r\n\r\n    vertical = false,\r\n    renderDot = null,\r\n}: ISliderfy) => {\r\n    const slidesArray = Array.isArray(children) ? children : [children];\r\n    const arrLen = slidesArray.length * 4;\r\n    const dotsCount = slidesArray.length;\r\n\r\n    const m = Math;\r\n    const { delay, reverseDirection } = autoplay;\r\n\r\n    const [slideIndex, setSlideIndex] = useState(0);\r\n    const autoplayInterval = useRef<ReturnType<typeof setInterval> | null>(null);\r\n    const sliderRef = useRef<HTMLDivElement | null>(null);\r\n    const [sliderSize, setSliderSize] = useState({ w: 0, h: 0 });\r\n    slidesPerGroup = m.max(1, m.min((slidesPerView = m.max(1, m.min(slidesPerView, arrLen / 4 - 1))), slidesPerGroup));\r\n\r\n    const changeSlide = useCallback(\r\n        throttle((direction: number) => {\r\n            clearInterval(autoplayInterval.current ?? undefined);\r\n            setSlideIndex((prevIndex) => (prevIndex + slidesPerGroup * direction + arrLen) % arrLen);\r\n\r\n            const slider = sliderRef.current;\r\n            const parent = slider?.parentElement;\r\n\r\n            if (!slider || !parent) return;\r\n\r\n            const parentSize = vertical ? parent.clientHeight : parent.clientWidth;\r\n            const offsetPerSlide = (parentSize - spaceBetween * slidesPerView) / slidesPerView;\r\n            const fullOffset = (offsetPerSlide + spaceBetween) * direction * slidesPerGroup;\r\n\r\n            slider.style.transitionDuration = \"0ms\";\r\n            slider.style.transform = `translate${vertical ? \"Y\" : \"X\"}(${fullOffset}px)`;\r\n\r\n            requestAnimationFrame(() => {\r\n                slider.style.transitionDuration = `${transitionDuration}ms`;\r\n                slider.style.transform = `translate${vertical ? \"Y\" : \"X\"}(0)`;\r\n            });\r\n        }, transitionDuration),\r\n        [slidesPerGroup, slidesPerView, spaceBetween, vertical, sliderSize, transitionDuration]\r\n    );\r\n\r\n    const generateSlides = () => {\r\n        const parent = sliderRef.current?.parentElement;\r\n\r\n        const parentSize = vertical ? parent?.clientHeight ?? 1 : parent?.clientWidth ?? 1;\r\n        const slideSize = ((parentSize - spaceBetween * slidesPerView) / slidesPerView / parentSize) * 100;\r\n\r\n        return Array.from({ length: slidesPerView + slidesPerGroup * 2 + 2 }, (_, i) => {\r\n            const index = (slideIndex + i - slidesPerGroup + arrLen - 1) % arrLen;\r\n            return (\r\n                <div\r\n                    key={index}\r\n                    className={`sliderfy__slide ${sliderfyClassName}__slide${\r\n                        i >= slidesPerGroup + 1 && i < slidesPerGroup + slidesPerView + 1\r\n                            ? ` ${sliderfyClassName}__slide--active`\r\n                            : \"\"\r\n                    }`}\r\n                    style={{\r\n                        [vertical ? \"height\" : \"width\"]: `${slideSize}%`,\r\n                    }}>\r\n                    {slidesArray[index % (arrLen / 4)].props.children}\r\n                </div>\r\n            );\r\n        });\r\n    };\r\n\r\n    const generateDots = () =>\r\n        renderDot && (\r\n            <ul className={`sliderfy__dots ${sliderfyClassName}__dots`}>\r\n                {Array.from({ length: dotsCount }, (_, i) =>\r\n                    renderDot(\r\n                        i,\r\n                        `sliderfy__dot ${sliderfyClassName}__dot ${\r\n                            slideIndex % dotsCount === i ? `sliderfy__dot--active ${sliderfyClassName}__dot--active` : \"\"\r\n                        }`\r\n                    )\r\n                )}\r\n            </ul>\r\n        );\r\n\r\n    const generateArrows = () =>\r\n        [\"prev\", \"next\"].map((direction, i) => (\r\n            <div\r\n                key={direction}\r\n                className={`sliderfy__arrow sliderfy__arrow--${direction} ${sliderfyClassName}__arrow ${sliderfyClassName}__arrow--${direction}`}\r\n                onClick={() => changeSlide(i ? 1 : -1)}>\r\n                {direction}\r\n            </div>\r\n        ));\r\n\r\n    useEffect(() => {\r\n        if (sliderRef.current) {\r\n            setSliderSize({\r\n                w: sliderRef.current.clientWidth,\r\n                h: sliderRef.current.clientHeight,\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        sliderRef.current!.style.transitionDuration = `${transitionDuration}`;\r\n        sliderRef.current!.style.gap = `${spaceBetween}px`;\r\n    }, [spaceBetween, transitionDuration]);\r\n\r\n    useEffect(() => {\r\n        if (delay) {\r\n            autoplayInterval.current = setInterval(() => {\r\n                console.log(sliderfyClassName + \"\\t\" + Math.round((Math.random() % 10) * 10));\r\n                changeSlide(reverseDirection ? -1 : 1);\r\n            }, Math.max(delay, transitionDuration + 200));\r\n            return () => clearInterval(autoplayInterval.current ?? undefined);\r\n        }\r\n        // return () => clearInterval(autoplayInterval.current!);\r\n        // return () => autoplayInterval.current && clearInterval(autoplayInterval.current!);\r\n        return () => clearInterval(autoplayInterval.current ?? undefined);\r\n    }, [delay, reverseDirection, transitionDuration, changeSlide, sliderSize, slideIndex]);\r\n\r\n    useEffect(() => {\r\n        const sliderEl = sliderRef.current;\r\n        if (!allowTouchMove || !sliderEl) return;\r\n\r\n        const disableDrag = (event: DragEvent) => event.preventDefault();\r\n\r\n        const preventClickOnSwipe = (event: MouseEvent) => isSwiping && event.preventDefault();\r\n\r\n        const handlePointerDown = (event: PointerEvent) => {\r\n            isSwiping = false;\r\n            swipeStart = vertical ? event.clientY : event.clientX;\r\n        };\r\n\r\n        const handlePointerUp = (event: PointerEvent) => {\r\n            const delta = swipeStart - (vertical ? event.clientY : event.clientX);\r\n            if (m.abs(delta) > 20) {\r\n                changeSlide(delta > 0 ? 1 : -1);\r\n                isSwiping = true;\r\n            }\r\n        };\r\n\r\n        const events: Array<[keyof HTMLElementEventMap, (event: any) => void]> = [\r\n            [\"click\", preventClickOnSwipe],\r\n            [\"dragstart\", disableDrag],\r\n            [\"pointerdown\", handlePointerDown],\r\n            [\"pointerup\", handlePointerUp],\r\n        ];\r\n\r\n        if (allowTouchMove) {\r\n            events.forEach(([e, h]) => sliderEl?.addEventListener(e, h));\r\n            return () => events.forEach(([e, h]) => sliderEl?.removeEventListener(e, h));\r\n        }\r\n    }, [allowTouchMove, vertical, autoplay, sliderSize, changeSlide, m]);\r\n\r\n    if (!children) return;\r\n    return (\r\n        <div className={`sliderfy sliderfy-${vertical ? \"vertical\" : \"horizontal\"} ${sliderfyClassName}`}>\r\n            <div className={`sliderfy__container ${sliderfyClassName}__container`}>\r\n                <div className={`sliderfy__wrapper ${sliderfyClassName}__wrapper`} ref={sliderRef}>\r\n                    {generateSlides()}\r\n                </div>\r\n            </div>\r\n            {generateArrows()}\r\n            {generateDots()}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sliderfy;\r\n"],"names":[],"mappings":"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"}