{"version":3,"file":"sliderfy.js","sources":["../src/Components/sliderfy/Sliderfy.tsx"],"sourcesContent":["import { useState, useCallback, useEffect, useRef, JSX } from \"react\";\r\n\r\nlet swipeStart: number = 0;\r\nlet isSwiping: boolean = false;\r\n\r\nconst throttle = <T extends (...args: any[]) => any>(func: T, ms: number): ((...args: Parameters<T>) => void) => {\r\n    let lastCall = 0;\r\n    return function (...args: Parameters<T>) {\r\n        const now = Date.now();\r\n        if (now - lastCall >= ms) {\r\n            lastCall = now;\r\n            return func(...args);\r\n        }\r\n    };\r\n};\r\n\r\ntype AutoplayOptions = {\r\n    delay: number;\r\n    reverseDirection?: boolean;\r\n};\r\n\r\ntype ISliderfy = {\r\n    sliderfyClassName?: string;\r\n    children: JSX.Element | JSX.Element[];\r\n\r\n    slidesPerView?: number;\r\n    slidesPerGroup?: number;\r\n    spaceBetween?: number;\r\n\r\n    allowTouchMove?: boolean;\r\n\r\n    autoplay?: AutoplayOptions;\r\n\r\n    vertical?: boolean;\r\n    renderDot?: null | ((i: number, className: string) => JSX.Element);\r\n};\r\n\r\nconst Sliderfy = ({\r\n    sliderfyClassName = \"sliderfy\",\r\n    children,\r\n\r\n    slidesPerView = 1,\r\n    slidesPerGroup = 1,\r\n    spaceBetween = 0,\r\n    allowTouchMove = true,\r\n\r\n    autoplay = {\r\n        delay: 0,\r\n        reverseDirection: false,\r\n    },\r\n\r\n    vertical = false,\r\n    renderDot = null,\r\n}: ISliderfy) => {\r\n    if (!children) return;\r\n    const childrenIsArray = Array.isArray(children);\r\n    const childrenLength = childrenIsArray ? children.length : 1;\r\n\r\n    const slidesArray = childrenIsArray\r\n        ? [...children, ...children, ...children, ...children]\r\n        : [children, children, children, children, children, children];\r\n\r\n    const arrLen = slidesArray.length;\r\n    const dotsCount = arrLen / (childrenIsArray ? 4 : 6);\r\n    const m = Math;\r\n\r\n    slidesPerGroup = m.max(\r\n        1,\r\n        m.min((slidesPerView = m.max(1, m.min(slidesPerView, m.floor(arrLen / 4 - childrenLength / 2)))), slidesPerGroup)\r\n    );\r\n\r\n    const [slideIndex, setSlideIndex] = useState(0);\r\n    const autoplayInterval = useRef<any>(null);\r\n    const sliderRef = useRef<HTMLDivElement | null>(null);\r\n\r\n    const changeSlide = useCallback(\r\n        throttle((direction: number) => {\r\n            clearInterval(autoplayInterval.current);\r\n            setSlideIndex((prevIndex) => (prevIndex + slidesPerGroup * direction + arrLen) % arrLen);\r\n        }, 1000),\r\n        [slidesPerGroup]\r\n    );\r\n\r\n    const generateSlides = () =>\r\n        Array.from({ length: slidesPerView + slidesPerGroup * 2 + 2 }, (_, i) => (\r\n            <div\r\n                key={(slideIndex + i - slidesPerGroup + arrLen) % arrLen}\r\n                className={`${sliderfyClassName}__slide${\r\n                    i >= slidesPerGroup + 1 && i < slidesPerGroup + slidesPerView + 1\r\n                        ? ` ${sliderfyClassName}__slide--active`\r\n                        : \"\"\r\n                }`}\r\n                style={{\r\n                    transform: `translate${vertical ? \"Y\" : \"X\"}(calc(${(i - slidesPerGroup - 1) * 100}% + ${\r\n                        spaceBetween * (i - slidesPerGroup - 0.5)\r\n                    }px))`,\r\n                    [vertical ? \"height\" : \"width\"]: `calc(${100 / slidesPerView}% - ${\r\n                        (spaceBetween * slidesPerView) / slidesPerView\r\n                    }px)`,\r\n                }}>\r\n                {slidesArray[(slideIndex + i - slidesPerGroup + arrLen - 1) % arrLen].props.children}\r\n            </div>\r\n        ));\r\n\r\n    const generateDots = () =>\r\n        renderDot && (\r\n            <ul className={`${sliderfyClassName}__dots`}>\r\n                {Array.from({ length: dotsCount }, (_, i) =>\r\n                    renderDot(\r\n                        i,\r\n                        `${sliderfyClassName}__dot${i === slideIndex % dotsCount ? ` ${sliderfyClassName}__dot--active` : \"\"}`\r\n                    )\r\n                )}\r\n            </ul>\r\n        );\r\n\r\n    const generateArrows = () =>\r\n        [\"prev\", \"next\"].map((direction, i) => {\r\n            return (\r\n                <div\r\n                    key={direction}\r\n                    className={`${sliderfyClassName}__arrow ${sliderfyClassName}__arrow--${direction}`}\r\n                    onClick={() => changeSlide(i ? 1 : -1)}></div>\r\n            );\r\n        });\r\n\r\n    useEffect(() => {\r\n        if (autoplay.delay) {\r\n            autoplayInterval.current = setInterval(\r\n                () => changeSlide(autoplay.reverseDirection ? -1 : 1),\r\n                m.max(autoplay.delay, 1000)\r\n            );\r\n            return () => clearInterval(autoplayInterval.current);\r\n        }\r\n    }, [slideIndex, autoplay]);\r\n\r\n    useEffect(() => {\r\n        if (allowTouchMove) {\r\n            const disableDrag = (event: DragEvent) => event.preventDefault();\r\n\r\n            const preventClickOnSwipe = (event: MouseEvent) => isSwiping && event.preventDefault();\r\n\r\n            const handlePointerDown = (event: PointerEvent) => {\r\n                isSwiping = false;\r\n                swipeStart = vertical ? event.clientY : event.clientX;\r\n            };\r\n\r\n            const handlePointerUp = (event: PointerEvent) => {\r\n                const delta = swipeStart - (vertical ? event.clientY : event.clientX);\r\n                m.abs(delta) > 20 && (changeSlide(delta > 0 ? 1 : -1), (isSwiping = true));\r\n            };\r\n\r\n            const events: Array<[keyof HTMLElementEventMap, (event: any) => void]> = [\r\n                [\"click\", preventClickOnSwipe],\r\n                [\"dragstart\", disableDrag],\r\n                [\"pointerdown\", handlePointerDown],\r\n                [\"pointerup\", handlePointerUp],\r\n            ];\r\n\r\n            events.forEach(([e, h]) => sliderRef.current?.addEventListener(e, h));\r\n            return () => events.forEach(([e, h]) => sliderRef.current?.removeEventListener(e, h));\r\n        }\r\n    }, [allowTouchMove, vertical, autoplay]);\r\n\r\n    return (\r\n        <div className={sliderfyClassName}>\r\n            <div\r\n                className={`${sliderfyClassName}__wrapper`}\r\n                ref={sliderRef}\r\n                style={{ touchAction: `pan-${vertical ? \"x\" : \"y\"}` }}>\r\n                {generateSlides()}\r\n            </div>\r\n            {generateArrows()}\r\n            {generateDots()}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sliderfy;\r\n"],"names":[],"mappings":"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"}